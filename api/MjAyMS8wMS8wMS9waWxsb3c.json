{"title":"利用Python批量把图片输出为PDF文档","date":"2020-12-31T17:40:21.000Z","date_formatted":{"ll":"Jan 1, 2021","L":"01/01/2021","MM-DD":"01-01"},"link":"2021/01/01/pillow","updated":"2021-01-06T17:40:54.586Z","content":"<link rel=\"stylesheet\" class=\"aplayer-secondary-style-marker\" href=\"/assets/css/APlayer.min.css\"><script src=\"/assets/js/APlayer.min.js\" class=\"aplayer-secondary-script-marker\"></script><script class=\"meting-secondary-script-marker\" src=\"/assets/js/Meting.min.js\"></script><h2 id=\"前言\">前言<a title=\"#前言\" href=\"#前言\"></a></h2>\n<p>在Github瞎晃荡，发现了一个便利性很高的Python库 —— <a href=\"https://github.com/python-pillow/Pillow\" target=\"_blank\">Pillow</a></p>\n<p>这个库可以把图片文件夹内的图片批量输出成PDF文件，例如下载到的漫画都是一张一张的，而且有横竖不一和尺寸大小不一的情况，输出成PDF文件后，看漫画只需要上下滑动屏幕就好了。</p>\n<h2 id=\"安装pillow\">安装Pillow<a title=\"#安装pillow\" href=\"#安装pillow\"></a></h2>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">python3 -m pip install --upgrade pip</span><br><span class=\"line\">python3 -m pip install --upgrade Pillow</span><br></pre></td></tr></table></figure>\n<h2 id=\"创建main.py\"><a href=\"http://xn--main-pj9fv59d.py\">创建main.py</a><a title=\"#创建main.py\" href=\"#创建main.py\"></a></h2>\n<p><strong>DOC_NAME</strong> = ‘<em><strong>’ //图片输出的名字(根据实际情况变更)<br>\n<strong>IMAGES_PATH</strong> = ‘images/’   // 图片的保存路径(根据实际情况变更)<br>\n<strong>SAVE_PATH</strong> = ‘pdf/’   // PDF输出的路径(根据实际情况变更)<br>\n<strong>PAGE</strong> = 1              // 图片的张数 (根据实际情况变更)<br>\n<strong>FILE_TYPE</strong> = '.</strong></em>’      // 图片格式(根据实际情况变更)<br>\n<strong>FILL_NUMBER</strong> = 3         // 需要填充的长度(根据实际情况变更)</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">from PIL import Image</span><br><span class=\"line\"></span><br><span class=\"line\">_cover &#x3D; Image.open(&#39;images&#x2F;&#123;&#125;&#123;&#125;&#39;.format(&#39;1&#39;.zfill(__FILL_NUMBER__), __FILE_TYPE__))</span><br><span class=\"line\"></span><br><span class=\"line\">cover &#x3D; _cover.convert(&#39;RGB&#39;)</span><br><span class=\"line\"></span><br><span class=\"line\">imagelist &#x3D; []</span><br><span class=\"line\"></span><br><span class=\"line\">for i in range(2, __PAGE__ + 1):</span><br><span class=\"line\">    _index &#x3D; str(i).zfill(__FILL_NUMBER__)</span><br><span class=\"line\">    _real_path &#x3D; __IMAGES_PATH__ + _index + __FILE_TYPE__</span><br><span class=\"line\">    _image &#x3D; Image.open(_real_path)</span><br><span class=\"line\">    _im &#x3D; _image.convert(&#39;RGB&#39;)</span><br><span class=\"line\">    imagelist.append(_im)</span><br><span class=\"line\"></span><br><span class=\"line\">saved_path &#x3D; __SAVE_PATH__ + __DOC_NAME__ + &#39;.pdf&#39;</span><br><span class=\"line\"></span><br><span class=\"line\">cover.save(saved_path, save_all&#x3D;True, append_images&#x3D;imagelist)</span><br><span class=\"line\">__FILL_NUMBER__的数值取决于图片文件名，例如：001.jpg 该参数则为3.</span><br></pre></td></tr></table></figure>","prev":{"title":"Docker安装以及运行Aria2整合教程","link":"2021/01/01/aria2-pro"},"next":{"title":"Hexo添加Aplayer播放器","link":"2021/01/01/aplayer"},"plink":"http://example.com/2021/01/01/pillow/","toc":[{"id":"前言","title":"前言","index":"1"},{"id":"安装pillow","title":"安装Pillow","index":"2"},{"id":"创建main.py","title":"创建main.py","index":"3"}]}